import RPi.GPIO as GPIO
from RPLCD.gpio import CharLCD
#from datetime import date
import datetime
framebuffer = [
    '',
    '',
    '',
    ''
]
def write_to_lcd(lcd, framebuffer, num_cols):
    lcd.home()
    for row in framebuffer:
        lcd.write_string(row.ljust(num_cols)[:num_cols])
        lcd.write_string('\r\n')
lcd = CharLCD(numbering_mode=GPIO.BOARD,cols=20, rows=4, pin_rs=37, pin_e=35, pins_data=[33, 31, 29, 23])
#e = datetime.datetime.now()
#lcd.cursor_pos = (0,0)
#lcd.write_string(u'%s/%s/%s     %s:%s'%(e.day,e.month,e.year,e.hour,e.minute))
#lcd.cursor_pos = (1,0)
#lcd = CharLCD(cols=20, rows=4, pin_rs=37, pin_e=35, pins_data=[33, 31, 29, 23])
write_to_lcd(lcd, framebuffer, 20)
import time
myFile = open('/etc/LCD/file.conf', 'r')
url = myFile.read()
url= url.replace('\n', '')
txtfile= open(url,'r')
long_string= txtfile.read()
myFile.close()
txtfile.close()
def loop_string(string, lcd, framebuffer, row, num_cols, delay=0.5): #DELAY= CONTROLS THE SPEED OF SCROLL
    padding = ' ' * num_cols
    s = padding + string + padding
    s=string
    e = datetime.datetime.now()
    for i in range(len(s) - num_cols + 1):
        framebuffer[0] = u'%s/%s/%s     %s:%s'%(e.day,e.month,e.year,e.hour,e.minute)
        framebuffer[row] = s[i:i+num_cols]
        write_to_lcd(lcd, framebuffer, num_cols)
        if(i==0 or i==(len(s) - num_cols)):
                time.sleep(delay+1)
        else:
                time.sleep(delay)
while True:
    lcd.clear()
    loop_string(long_string, lcd, framebuffer,2, 20)

